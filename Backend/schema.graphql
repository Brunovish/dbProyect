type Query {
	readClient(id: Int): [Client]
	
}

type Mutation {

	createClient(input: ClientInput!): Client!
	deleteClient(id: Int!): Client!
	updateClient(id: Int!, input: ClientInput!): Client!

}

type Client {
	id: ID
	"""
	The brand's name
	@example "Microsoft"
	"""
	name: String
	"""
	The brand's login email
	@example "microsoft@outlook.com"
	"""
	nickname: String
	"""
	The password's hash
	@example "5e884898da2804"
	"""
	passwordHash: String
	"""
	The brand's phone number
	@example "555896448"
	"""
	phone: String
	"""
	Whether the brand has a due payment or not
	@example false
	"""
	paymentDue: Boolean
}

input ClientInput {
	name: String
	nickname: String
	passwordHash: String
	phone: String
	paymentDue: Boolean
}